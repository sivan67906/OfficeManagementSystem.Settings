// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Settings.Infrastructure.Persistence;

#nullable disable

namespace Settings.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241226144531_Intial4")]
    partial class Intial4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Settings.Domain.Entities.Applications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DatatableRowLimit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultTimezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmployeeCanExportData")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeFormat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Settings.Domain.Entities.BillOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BillOrderNumberDigits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillOrderNumberExample")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillOrderNumberSeperater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillOrderPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BillOrders");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContractNumberDigits")
                        .HasColumnType("int");

                    b.Property<string>("ContractNumberExample")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractNumberSeprator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecimalSeparator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExchangeRate")
                        .HasColumnType("int");

                    b.Property<string>("IsCryptocurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberofDecimals")
                        .HasColumnType("int");

                    b.Property<string>("ThousandSeparator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("USDPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Settings.Domain.Entities.LeadAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadAgents");
                });

            modelBuilder.Entity("Settings.Domain.Entities.LeadCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadCategories");
                });

            modelBuilder.Entity("Settings.Domain.Entities.LeadSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadSources");
                });

            modelBuilder.Entity("Settings.Domain.Entities.LeadStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeadStatuses");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("All")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowChatClientEmployee")
                        .HasColumnType("bit");

                    b.Property<bool>("Allowchatclientadmin")
                        .HasColumnType("bit");

                    b.Property<bool>("OnlyProjectMembercanwithclient")
                        .HasColumnType("bit");

                    b.Property<bool>("SoundNotifyAlert")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AgentTicket")
                        .HasColumnType("bit");

                    b.Property<bool>("AttendanceReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("AutoTaskReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("ContractSigned")
                        .HasColumnType("bit");

                    b.Property<bool>("EmployeeAssigntoProject")
                        .HasColumnType("bit");

                    b.Property<bool>("EstimateDeclined")
                        .HasColumnType("bit");

                    b.Property<bool>("EventInvite")
                        .HasColumnType("bit");

                    b.Property<bool>("EventReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("FollowUpReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceCreated")
                        .HasColumnType("bit");

                    b.Property<bool>("InvoiceReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("Leadnotification")
                        .HasColumnType("bit");

                    b.Property<bool>("LeaveApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("LeaveRejected")
                        .HasColumnType("bit");

                    b.Property<bool>("LeaveUpdated")
                        .HasColumnType("bit");

                    b.Property<bool>("ModulesEmailNotificationAttendanceReminderNew")
                        .HasColumnType("bit");

                    b.Property<bool>("ModulesEmailNotificationEventInviteNew")
                        .HasColumnType("bit");

                    b.Property<bool>("ModulesEmailNotificationEventReminderNew")
                        .HasColumnType("bit");

                    b.Property<bool>("ModulesEmailNotificationTestNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("MultipleLeaveApplication")
                        .HasColumnType("bit");

                    b.Property<bool>("NewClientTask")
                        .HasColumnType("bit");

                    b.Property<bool>("NewExpenseAddedbyAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("NewExpenseAddedbyMember")
                        .HasColumnType("bit");

                    b.Property<bool>("NewFileUploadedtoProject")
                        .HasColumnType("bit");

                    b.Property<bool>("NewLeaveApplication")
                        .HasColumnType("bit");

                    b.Property<bool>("NewLeaveRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("NewMultipleLeaveApplication")
                        .HasColumnType("bit");

                    b.Property<bool>("NewNoticePublished")
                        .HasColumnType("bit");

                    b.Property<bool>("NewOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPayment")
                        .HasColumnType("bit");

                    b.Property<bool>("NewProductPurchase")
                        .HasColumnType("bit");

                    b.Property<bool>("NewProject")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPropoInvoiceUpdatedsal")
                        .HasColumnType("bit");

                    b.Property<bool>("NewProposal")
                        .HasColumnType("bit");

                    b.Property<bool>("NewRecurringInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("NewSupportTicketRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("NewTask")
                        .HasColumnType("bit");

                    b.Property<bool>("NewTicketReply")
                        .HasColumnType("bit");

                    b.Property<bool>("NewTicketRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("NoticeUpdated")
                        .HasColumnType("bit");

                    b.Property<bool>("OrderUpdated")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentReceived")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("ProjectReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("ProposalApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("ProposalRejected")
                        .HasColumnType("bit");

                    b.Property<bool>("RecurringExpenseStatusUpdated")
                        .HasColumnType("bit");

                    b.Property<bool>("RecurringInvoiceStatusUpdated")
                        .HasColumnType("bit");

                    b.Property<bool>("RemovalRequestAdminNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("RemovalRequestApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("RemovalRequestApprovedLead")
                        .HasColumnType("bit");

                    b.Property<bool>("RemovalRequestApprovedUser")
                        .HasColumnType("bit");

                    b.Property<bool>("RemovalRequestReject")
                        .HasColumnType("bit");

                    b.Property<bool>("RemovalRequestRejectLead")
                        .HasColumnType("bit");

                    b.Property<bool>("RemovalRequestRejectUser")
                        .HasColumnType("bit");

                    b.Property<bool>("SubTaskAssigneeAdded")
                        .HasColumnType("bit");

                    b.Property<bool>("SubTaskCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("TaskComment")
                        .HasColumnType("bit");

                    b.Property<bool>("TaskCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("TaskCompletedClient")
                        .HasColumnType("bit");

                    b.Property<bool>("TaskNote")
                        .HasColumnType("bit");

                    b.Property<bool>("TaskReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("TaskUpdateClient")
                        .HasColumnType("bit");

                    b.Property<bool>("TaskUpdated")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorCode")
                        .HasColumnType("bit");

                    b.Property<bool>("UserJoinViaInvitation")
                        .HasColumnType("bit");

                    b.Property<bool>("UserRegistrationAddedbyAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Planning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Company")
                        .HasColumnType("int");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Designation")
                        .HasColumnType("int");

                    b.Property<int>("Employee")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Permission")
                        .HasColumnType("int");

                    b.Property<float>("PlanPrice")
                        .HasColumnType("real");

                    b.Property<int>("Roles")
                        .HasColumnType("int");

                    b.Property<int>("Validity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Plannings");
                });

            modelBuilder.Entity("Settings.Domain.Entities.ProjectCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjectCategories");
                });

            modelBuilder.Entity("Settings.Domain.Entities.ProjectReminderPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjectReminderPersons");
                });

            modelBuilder.Entity("Settings.Domain.Entities.ProjectSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSendReminder")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectReminderPersonId")
                        .HasColumnType("int");

                    b.Property<int>("RemindBefore")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProjectReminderPersonId")
                        .IsUnique();

                    b.ToTable("ProjectSettings");
                });

            modelBuilder.Entity("Settings.Domain.Entities.ProjectStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProjectStatuses");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BillOrderNumberDigits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillOrderNumberExample")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillOrderNumberSeperater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillOrderPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumberDigits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumberExample")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumberSeperater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCreditNumberDigits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCreditNumberExample")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCreditNumberSeperater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCreditPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Settings.Domain.Entities.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PurchaseOrderNumberDigits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumberExample")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumberSeperater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AddFile")
                        .HasColumnType("bit");

                    b.Property<int>("AfterXDate")
                        .HasColumnType("int");

                    b.Property<bool>("AssignedBy")
                        .HasColumnType("bit");

                    b.Property<bool>("AssignedTo")
                        .HasColumnType("bit");

                    b.Property<int>("BeforeXDate")
                        .HasColumnType("int");

                    b.Property<bool>("Comment")
                        .HasColumnType("bit");

                    b.Property<bool>("CopyTaskLink")
                        .HasColumnType("bit");

                    b.Property<bool>("CustomFields")
                        .HasColumnType("bit");

                    b.Property<bool>("Description")
                        .HasColumnType("bit");

                    b.Property<bool>("DueDate")
                        .HasColumnType("bit");

                    b.Property<bool>("History")
                        .HasColumnType("bit");

                    b.Property<bool>("HoursLogged")
                        .HasColumnType("bit");

                    b.Property<bool>("Label")
                        .HasColumnType("bit");

                    b.Property<bool>("MakePrivate")
                        .HasColumnType("bit");

                    b.Property<bool>("Notes")
                        .HasColumnType("bit");

                    b.Property<bool>("Priority")
                        .HasColumnType("bit");

                    b.Property<bool>("Project")
                        .HasColumnType("bit");

                    b.Property<bool>("SendReminderDueDate")
                        .HasColumnType("bit");

                    b.Property<bool>("StartDate")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Statuss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SubTask")
                        .HasColumnType("bit");

                    b.Property<bool>("TaskCategory")
                        .HasColumnType("bit");

                    b.Property<int>("TaskboardLength")
                        .HasColumnType("int");

                    b.Property<bool>("TimeEstimate")
                        .HasColumnType("bit");

                    b.Property<bool>("Timesheet")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("Settings.Domain.Entities.VendorCredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("VendorCreditNumberDigits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCreditNumberExample")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCreditNumberSeperater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCreditPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VendorCredit");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Applications", b =>
                {
                    b.HasOne("Settings.Domain.Entities.Currency", "Currency")
                        .WithMany("Applications")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Settings.Domain.Entities.ProjectSetting", b =>
                {
                    b.HasOne("Settings.Domain.Entities.ProjectReminderPerson", "ProjectReminderPerson")
                        .WithOne("ProjectSetting")
                        .HasForeignKey("Settings.Domain.Entities.ProjectSetting", "ProjectReminderPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectReminderPerson");
                });

            modelBuilder.Entity("Settings.Domain.Entities.Currency", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Settings.Domain.Entities.ProjectReminderPerson", b =>
                {
                    b.Navigation("ProjectSetting");
                });
#pragma warning restore 612, 618
        }
    }
}
